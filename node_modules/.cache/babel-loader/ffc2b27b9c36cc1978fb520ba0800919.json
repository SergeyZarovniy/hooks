{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zarov\\\\Documents\\\\GitHub\\\\hooks\\\\src\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, use } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [value, setValue] = useState(1);\n  const [visible, setVisible] = useState(true);\n\n  if (visible) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setValue(v => value + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setVisible(false),\n        children: \"hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PlanetInfo, {\n        id: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setVisible(true),\n      children: \"show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this);\n  }\n};\n\n_s(App, \"JGV7Rstmle/ulpIZm5nhvESikWA=\");\n\n_c = App;\n\nconst getPlanet = id => {\n  return fetch(`https://swapi.dev/api/planets/${id}`).then(res => res.json()).then(data => data);\n};\n\nconst useRequest = request => {\n  _s2();\n\n  const initialState = {\n    data: null,\n    loading: true,\n    error: null\n  };\n  const [dataState, setDataState] = useState(initialState);\n  useEffect(() => {\n    setDataState(initialState);\n    let cancelled = false;\n    request().then(data => !cancelled && setDataState({\n      data,\n      loading: false,\n      error: null\n    })).catch(error => !cancelled && setDataState({\n      data: null,\n      loading: false,\n      error\n    }));\n    return () => cancelled = true;\n  }, [request]);\n  return dataState;\n};\n\n_s2(useRequest, \"JUlobQBQcutnVyZcQggRuw/y4po=\");\n\nconst usePlanetInfo = id => {\n  _s3();\n\n  const request = useCallback(() => getPlanet(id), [id]);\n  return useRequest(request);\n};\n\n_s3(usePlanetInfo, \"dVESvfAZBDXQ9CGQfEsjd1YEZ1Y=\", false, function () {\n  return [useRequest];\n});\n\nconst PlanetInfo = ({\n  id\n}) => {\n  _s4();\n\n  const {\n    data,\n    loading,\n    error\n  } = usePlanetInfo(id);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Something go wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [id, \" - \", data.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s4(PlanetInfo, \"/4CALeCvRNIvyvtPn6ysgnU06nk=\", false, function () {\n  return [usePlanetInfo];\n});\n\n_c2 = PlanetInfo;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 115,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PlanetInfo\");","map":{"version":3,"sources":["C:/Users/Zarov/Documents/GitHub/hooks/src/index.js"],"names":["React","useState","useEffect","useCallback","use","ReactDOM","App","value","setValue","visible","setVisible","v","getPlanet","id","fetch","then","res","json","data","useRequest","request","initialState","loading","error","dataState","setDataState","cancelled","catch","usePlanetInfo","PlanetInfo","name","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,useCallback,use} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nconst App = () => {\r\n    const [value,setValue] = useState(1);\r\n    const [visible,setVisible] = useState(true);\r\n if (visible) {\r\n     return (\r\n        <div>\r\n            <button onClick = { () => setValue((v) => value + 1)} >+</button>\r\n            <button onClick = { () => setVisible(false) }>hide</button>\r\n            <PlanetInfo id = {value} />\r\n        </div> \r\n     );\r\n } else {\r\n     return (\r\n         <button onClick = { () => setVisible(true)}>show</button>\r\n     )\r\n }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getPlanet = (id) => {\r\n    return fetch (`https://swapi.dev/api/planets/${id}`)\r\n    .then(res => res.json())\r\n    .then(data => data)\r\n}\r\n\r\nconst useRequest = (request) => {\r\n\r\n    const initialState = {\r\n        data:null,\r\n        loading:true,\r\n        error:null\r\n    };\r\n\r\n    const [dataState,setDataState] = useState(initialState);\r\n\r\n    useEffect (() => {\r\n\r\n        setDataState(initialState);\r\n\r\n    let cancelled = false;\r\n     request()\r\n     .then(data => !cancelled && setDataState({\r\n         data,\r\n         loading:false,\r\n         error:null\r\n     }))\r\n     .catch(error => !cancelled && setDataState({\r\n         data:null,\r\n         loading:false,\r\n         error\r\n     }))\r\n\r\n    return () => cancelled = true;\r\n    },[request])\r\n\r\n    return dataState;\r\n};\r\n\r\n\r\nconst usePlanetInfo = (id) => {\r\n    const request = useCallback( () => getPlanet(id), [id] );\r\n    \r\n    return useRequest(request);\r\n};\r\n\r\n\r\n\r\n\r\nconst PlanetInfo = ( {id} ) => {\r\n    const {data, loading, error} = usePlanetInfo(id);\r\n\r\n    if(error) {\r\n        return <div>Something go wrong</div>\r\n    }\r\n\r\n    if(loading) {\r\n        return <div>loading...</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           {id} - {data.name}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}