{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zarov\\\\Documents\\\\GitHub\\\\hooks\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(HookSwitcher, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst HookSwitcher = () => {\n  _s();\n\n  const [color, setColor] = useState('white');\n  const [fontSize, setFontSize] = useState(14);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      backgroundColor: color,\n      fontSize: fontSize\n    },\n    children: [\"Hello World\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setColor('black');\n      },\n      children: \" Dark \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setColor('white');\n      },\n      children: \" Light \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        set;\n      },\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HookSwitcher, \"EeZahKYh2rQBh4zQc+MKLWqVj/4=\");\n\n_c2 = HookSwitcher;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"HookSwitcher\");","map":{"version":3,"sources":["C:/Users/Zarov/Documents/GitHub/hooks/src/index.js"],"names":["React","useState","ReactDOM","App","HookSwitcher","color","setColor","fontSize","setFontSize","padding","backgroundColor","set","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAMA,G;;AAUN,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,OAAD,CAAjC;AACA,QAAM,CAACM,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACQ,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,eAAe,EAAEL,KAAnC;AAA0CE,MAAAA,QAAQ,EAAEA;AAApD,KAAZ;AAAA,2CAEF;AAAQ,MAAA,OAAO,EAAK,MAAM;AAACD,QAAAA,QAAQ,CAAC,OAAD,CAAR;AAAkB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFE,eAGF;AAAQ,MAAA,OAAO,EAAK,MAAM;AAACA,QAAAA,QAAQ,CAAC,OAAD,CAAR;AAAkB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHE,eAIF;AAAQ,MAAA,OAAO,EAAK,MAAM;AAACK,QAAAA,GAAG;AAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAbD;;GAAMP,Y;;MAAAA,Y;AAgBNF,QAAQ,CAACU,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst App = () => {\n  return (\n    <HookSwitcher/>\n  );\n};\n\n\n\n\n\nconst HookSwitcher = () => {\n\n  const [color,setColor] = useState('white');\n  const [fontSize,setFontSize] = useState(14);\n\n  return (\n    <div style={{padding: '10px', backgroundColor: color, fontSize: fontSize}}>\n      Hello World\n  <button onClick = { () => {setColor('black')} }> Dark </button>\n  <button onClick = { () => {setColor('white')} }> Light </button>\n  <button onClick = { () => {set} }> + </button>\n</div>\n  );\n};\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}