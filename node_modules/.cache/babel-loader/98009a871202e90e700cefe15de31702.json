{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zarov\\\\Documents\\\\GitHub\\\\hooks\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [value, setValue] = useState(0);\n  const [visible, setVisible] = useState(true);\n\n  if (visible) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setValue = v => value + 1,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setVisible(false),\n        children: \"hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HookCounter, {\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this);\n  }\n\n  ;\n};\n\n_s(App, \"l5Ru3EiSYJBf2/VCMB7LgN6ewMw=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Zarov/Documents/GitHub/hooks/src/index.js"],"names":["React","useState","ReactDOM","App","value","setValue","visible","setVisible","v","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACK,OAAD,EAASC,UAAT,IAAuBN,QAAQ,CAAC,IAAD,CAArC;;AACH,MAAIK,OAAJ,EAAa;AACT,wBACG;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAK,MAAMD,QAAQ,GAAKG,CAAD,IAAOJ,KAAK,GAAG,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAK,MAAMG,UAAU,CAAC,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAOH;;AAAA;AACD,CAZD;;GAAMD,G;;KAAAA,G;AAeND,QAAQ,CAACO,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nconst App = () => {\r\n    const [value,setValue] = useState(0);\r\n    const [visible,setVisible] = useState(true);\r\n if (visible) {\r\n     return (\r\n        <div>\r\n            <button onClick = { () => setValue = ((v) => value + 1)} >+</button>\r\n            <button onClick = { () => setVisible(false) }>hide</button>\r\n            <HookCounter value={value}/>\r\n        </div> \r\n     );\r\n };\r\n};\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}