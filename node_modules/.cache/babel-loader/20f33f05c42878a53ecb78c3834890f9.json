{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zarov\\\\Documents\\\\GitHub\\\\hooks\\\\src\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [value, setValue] = useState(1);\n  const [visible, setVisible] = useState(true);\n\n  if (visible) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setValue(v => value + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setVisible(false),\n        children: \"hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PlanetInfo, {\n        id: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setVisible(true),\n      children: \"show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this);\n  }\n};\n\n_s(App, \"JGV7Rstmle/ulpIZm5nhvESikWA=\");\n\n_c = App;\n\nconst PlanetInfo = ({\n  id\n}) => {\n  _s2();\n\n  const [name, setName] = useState(null);\n  useEffect(() => {\n    let canselled = false;\n    fetch(`https://swapi.dev/api/planets/${id}`).then(res => res.json()).then(data => setName(data.name));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [id, \" - \", name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(PlanetInfo, \"SDVo2MQB58wBCNQERHNprsxi3IU=\");\n\n_c2 = PlanetInfo;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PlanetInfo\");","map":{"version":3,"sources":["C:/Users/Zarov/Documents/GitHub/hooks/src/index.js"],"names":["React","useState","useEffect","ReactDOM","App","value","setValue","visible","setVisible","v","PlanetInfo","id","name","setName","canselled","fetch","then","res","json","data","render","document","getElementById"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACM,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,IAAD,CAArC;;AACH,MAAIM,OAAJ,EAAa;AACT,wBACG;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAK,MAAMD,QAAQ,CAAEG,CAAD,IAAOJ,KAAK,GAAG,CAAhB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAK,MAAMG,UAAU,CAAC,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAIH;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAOH,GARD,MAQO;AACH,wBACI;AAAQ,MAAA,OAAO,EAAK,MAAMG,UAAU,CAAC,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACD,CAhBD;;GAAMJ,G;;KAAAA,G;;AAoBN,MAAMM,UAAU,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAY;AAAA;;AAE3B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,IAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAE,MAAM;AAEjB,QAAIY,SAAS,GAAG,KAAhB;AACCC,IAAAA,KAAK,CAAG,iCAAgCJ,EAAG,EAAtC,CAAL,CACAK,IADA,CACKC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADZ,EAEAF,IAFA,CAEKG,IAAI,IAAIN,OAAO,CAACM,IAAI,CAACP,IAAN,CAFpB;AAIA,GAPQ,EAOP,CAACD,EAAD,CAPO,CAAT;AASA,sBACI;AAAA,eACKA,EADL,SACYC,IADZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlBD;;IAAMF,U;;MAAAA,U;AA2BNP,QAAQ,CAACiB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nconst App = () => {\r\n    const [value,setValue] = useState(1);\r\n    const [visible,setVisible] = useState(true);\r\n if (visible) {\r\n     return (\r\n        <div>\r\n            <button onClick = { () => setValue((v) => value + 1)} >+</button>\r\n            <button onClick = { () => setVisible(false) }>hide</button>\r\n            <PlanetInfo id = {value} />\r\n        </div> \r\n     );\r\n } else {\r\n     return (\r\n         <button onClick = { () => setVisible(true)}>show</button>\r\n     )\r\n }\r\n};\r\n\r\n\r\n\r\nconst PlanetInfo = ( {id} ) => {\r\n\r\n    const [name,setName] = useState(null);\r\n\r\n    useEffect (() => {\r\n\r\n    let canselled = false;\r\n     fetch (`https://swapi.dev/api/planets/${id}`)\r\n    .then(res => res.json())\r\n    .then(data => setName(data.name))\r\n\r\n    },[id])\r\n\r\n    return (\r\n        <div>\r\n            {id} - {name}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}